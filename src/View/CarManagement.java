package View;

import Entity.Koneksi;
import com.mysql.cj.protocol.Resultset;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.sql.*;
import javax.swing.*;

import java.sql.DriverManager;
import javax.swing.JOptionPane;

/**
 *
 * @author Asus
 */
public class CarManagement extends javax.swing.JFrame {

    private Statement stm;
    private ResultSet res;

    /**
     * Creates new form Register
     */
    public CarManagement() {
        initComponents();
        setAlwaysOnTop(false);
        try {

            Connection connection = Koneksi.getConnection();
            stm = connection.createStatement();

            tampiltabel();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }

    }

    private void tampiltabel() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("No Plat Mobil");
        model.addColumn("Merk Mobil");
        model.addColumn("Harga Mobil");
        jTable1.setModel(model);
        try {
            Connection connection = Koneksi.getConnection();
            res = stm.executeQuery("SELECT noPlatMobil, merkMobil, hargaMobil FROM tbmobil");
            while (res.next()) {
                model.addRow(new Object[]{
                    res.getInt("noPlatMobil"),
                    res.getString("merkMobil"),
                    res.getInt("hargaMobil"),});

            }
        } catch (Exception e) {

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        platMobil = new javax.swing.JLabel();
        txtplat = new javax.swing.JTextField();
        merkmobil = new javax.swing.JLabel();
        txthargamobil = new javax.swing.JTextField();
        hargamobil = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txtmerkmobil = new javax.swing.JTextField();
        btkelolauser = new javax.swing.JButton();
        btkelolamobil = new javax.swing.JButton();
        bttambah = new javax.swing.JButton();
        btedit = new javax.swing.JButton();
        bthapus = new javax.swing.JButton();
        btkelolatransaksi1 = new javax.swing.JButton();
        btkeluar = new javax.swing.JButton();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        platMobil.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        platMobil.setText("Plat Mobil");
        getContentPane().add(platMobil);
        platMobil.setBounds(370, 140, 110, 25);

        txtplat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtplatActionPerformed(evt);
            }
        });
        getContentPane().add(txtplat);
        txtplat.setBounds(370, 180, 320, 40);

        merkmobil.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        merkmobil.setText("Merk Mobil");
        getContentPane().add(merkmobil);
        merkmobil.setBounds(370, 240, 180, 25);

        txthargamobil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txthargamobilActionPerformed(evt);
            }
        });
        getContentPane().add(txthargamobil);
        txthargamobil.setBounds(760, 180, 320, 40);

        hargamobil.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        hargamobil.setText("Harga Mobil");
        getContentPane().add(hargamobil);
        hargamobil.setBounds(760, 140, 110, 25);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nomor Plat Mobil", "Merk Mobil", "Harga Mobil"
            }
        ));
        jTable1.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                jTable1ComponentAdded(evt);
            }
            public void componentRemoved(java.awt.event.ContainerEvent evt) {
                jTable1ComponentRemoved(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(240, 490, 930, 210);

        txtmerkmobil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtmerkmobilActionPerformed(evt);
            }
        });
        getContentPane().add(txtmerkmobil);
        txtmerkmobil.setBounds(370, 280, 320, 40);

        btkelolauser.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btkelolauser.setText("Kelola Data User");
        btkelolauser.setBackground(new java.awt.Color(255, 153, 153));
        btkelolauser.setForeground(new java.awt.Color(255, 255, 255));
        btkelolauser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btkelolauserActionPerformed(evt);
            }
        });
        getContentPane().add(btkelolauser);
        btkelolauser.setBounds(20, 140, 210, 50);

        btkelolamobil.setBackground(new java.awt.Color(255, 102, 153));
        btkelolamobil.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btkelolamobil.setForeground(new java.awt.Color(255, 255, 255));
        btkelolamobil.setText("Kelola Data Mobil");
        btkelolamobil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btkelolamobilActionPerformed(evt);
            }
        });
        getContentPane().add(btkelolamobil);
        btkelolamobil.setBounds(20, 320, 210, 50);

        bttambah.setBackground(new java.awt.Color(255, 153, 153));
        bttambah.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        bttambah.setForeground(new java.awt.Color(255, 255, 255));
        bttambah.setText("Tambah");
        bttambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttambahActionPerformed(evt);
            }
        });
        getContentPane().add(bttambah);
        bttambah.setBounds(360, 370, 170, 50);

        btedit.setBackground(new java.awt.Color(255, 153, 153));
        btedit.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btedit.setForeground(new java.awt.Color(255, 255, 255));
        btedit.setText("Edit");
        btedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bteditActionPerformed(evt);
            }
        });
        getContentPane().add(btedit);
        btedit.setBounds(650, 370, 170, 50);

        bthapus.setBackground(new java.awt.Color(255, 153, 153));
        bthapus.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        bthapus.setForeground(new java.awt.Color(255, 255, 255));
        bthapus.setText("Hapus");
        bthapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bthapusActionPerformed(evt);
            }
        });
        getContentPane().add(bthapus);
        bthapus.setBounds(920, 370, 170, 50);

        btkelolatransaksi1.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btkelolatransaksi1.setText("Kelola Data Transaksi");
        btkelolatransaksi1.setBackground(new java.awt.Color(255, 153, 153));
        btkelolatransaksi1.setForeground(new java.awt.Color(255, 255, 255));
        btkelolatransaksi1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btkelolatransaksi1ActionPerformed(evt);
            }
        });
        getContentPane().add(btkelolatransaksi1);
        btkelolatransaksi1.setBounds(20, 490, 210, 50);

        btkeluar.setBackground(new java.awt.Color(255, 0, 0));
        btkeluar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btkeluar.setForeground(new java.awt.Color(255, 255, 255));
        btkeluar.setText("Keluar");
        btkeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btkeluarActionPerformed(evt);
            }
        });
        getContentPane().add(btkeluar);
        btkeluar.setBounds(1100, 10, 70, 30);

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Entity/bg2_1.png"))); // NOI18N
        getContentPane().add(background);
        background.setBounds(0, 0, 1280, 700);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtplatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtplatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtplatActionPerformed

    private void txthargamobilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txthargamobilActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txthargamobilActionPerformed

    private void txtmerkmobilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtmerkmobilActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtmerkmobilActionPerformed

    private void btkelolauserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btkelolauserActionPerformed
        UserManagement user = new UserManagement();
        user.setSize(1181, 700);
        user.setResizable(false);
        user.setVisible(true);
        user.setExtendedState(JFrame.NORMAL);
        this.dispose();
    }//GEN-LAST:event_btkelolauserActionPerformed

    private void btkelolamobilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btkelolamobilActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btkelolamobilActionPerformed

    private void bttambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttambahActionPerformed
        PreparedStatement preparedStatement = null;
        try {
            Connection connection = Koneksi.getConnection();
            System.out.println("Database connected successfully!");

            String query = "INSERT INTO tbmobil (noPlatMobil,merkMobil,hargaMobil) VALUES (?, ?, ?)";
            preparedStatement = connection.prepareStatement(query);

            preparedStatement.setInt(1, Integer.parseInt(txtplat.getText()));
            preparedStatement.setString(2, txtmerkmobil.getText());
            preparedStatement.setInt(3, Integer.parseInt(txthargamobil.getText()));

            int rowsInserted = preparedStatement.executeUpdate();
            tampiltabel();
            System.out.println("Rows inserted: " + rowsInserted);

            if (rowsInserted > 0) {
                System.out.println("Data berhasil ditambahkan ke tabel mobil.");
            }
        } catch (SQLException ex) {
            System.out.println("Error: " + ex.getMessage());
            ex.printStackTrace();
        } finally {
            if (preparedStatement != null) {
                try {
                    preparedStatement.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_bttambahActionPerformed

    private void bteditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bteditActionPerformed
        int noplat = Integer.parseInt(txtplat.getText());
        String merk = txtmerkmobil.getText();
        int harga = Integer.parseInt(txthargamobil.getText());
        PreparedStatement preparedStatement = null;
        try {
            Connection connection = Koneksi.getConnection();
            System.out.println("Database connected successfully!");

            String query = "UPDATE tbmobil "
                    + "SET merkMobil='" + merk + "',hargaMobil='" + harga + "' WHERE noPlatMobil= '" + noplat + "'";
            preparedStatement = connection.prepareStatement(query);
            preparedStatement.executeUpdate();
            tampiltabel();
        } catch (SQLException ex) {
            System.out.println("Error: " + ex.getMessage());
            ex.printStackTrace();
        } finally {
            if (preparedStatement != null) {
                try {
                    preparedStatement.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }

    }//GEN-LAST:event_bteditActionPerformed

    private void bthapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bthapusActionPerformed
        PreparedStatement preparedStatement = null;
        int noplat = Integer.parseInt(txtplat.getText());
        try {
            Connection connection = Koneksi.getConnection();
            System.out.println("Database connected successfully!");

            String query = "DELETE FROM tbmobil WHERE noPlatMobil ='" + noplat + "'";
            preparedStatement = connection.prepareStatement(query);
            preparedStatement.executeUpdate();
            tampiltabel();
            System.out.println("Data dihapus");

        } catch (SQLException ex) {
            System.out.println("Error: " + ex.getMessage());
            ex.printStackTrace();
        } finally {
            if (preparedStatement != null) {
                try {
                    preparedStatement.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_bthapusActionPerformed

    private void btkelolatransaksi1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btkelolatransaksi1ActionPerformed
        TransactionManagement tm = new TransactionManagement();
        tm.setSize(1181, 700);
        tm.setResizable(false);
        tm.setVisible(true);
        tm.setExtendedState(JFrame.NORMAL);
        this.dispose();

    }//GEN-LAST:event_btkelolatransaksi1ActionPerformed

    private void jTable1ComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jTable1ComponentAdded

    }//GEN-LAST:event_jTable1ComponentAdded

    private void jTable1ComponentRemoved(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jTable1ComponentRemoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1ComponentRemoved

    private void btkeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btkeluarActionPerformed
         LandingPage lp = new LandingPage();
        lp.setSize(1181, 700);
        lp.setResizable(false);
        lp.setVisible(true);
        lp.setExtendedState(JFrame.NORMAL);
        this.dispose();   
    }//GEN-LAST:event_btkeluarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CarManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CarManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CarManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CarManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CarManagement().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private javax.swing.JButton btedit;
    private javax.swing.JButton bthapus;
    private javax.swing.JButton btkelolamobil;
    private javax.swing.JButton btkelolatransaksi1;
    private javax.swing.JButton btkelolauser;
    private javax.swing.JButton btkeluar;
    private javax.swing.JButton bttambah;
    private javax.swing.JLabel hargamobil;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel merkmobil;
    private javax.swing.JLabel platMobil;
    private javax.swing.JTextField txthargamobil;
    private javax.swing.JTextField txtmerkmobil;
    private javax.swing.JTextField txtplat;
    // End of variables declaration//GEN-END:variables
}
