package View;

import Entity.Koneksi;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.sql.DriverManager;
import java.util.concurrent.TimeUnit;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Asus
 */
public class TransactionManagement extends javax.swing.JFrame {

    private Statement stm;
    private ResultSet res;

    /**
     * Creates new form Register
     */
    @SuppressWarnings("deprecation")

    public TransactionManagement() {
        setAlwaysOnTop(false);
        initComponents();
        tampiltabel();
        try {

            Connection connection = Koneksi.getConnection();
            stm = connection.createStatement();

            tampiltabel();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        jDateChooser1.addPropertyChangeListener("date", new TransactionManagement.DateChangeListener());
        jDateChooser2.addPropertyChangeListener("date", new TransactionManagement.DateChangeListener());

        txttotalharga.addActionListener(new ActionListener() {
            @Override

            public void actionPerformed(ActionEvent e) {
                updateH();
            }
        });
        txtdurasisewa.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                updateH();
            }
        });

        txtnoplat1.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                updateH();
            }
        });
    }

    private void tampiltabel() {

        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID Transaksi");
        model.addColumn("NIK");
        model.addColumn("No Plat Mobil");
        model.addColumn("Durasi Sewa");
        model.addColumn("Tanggal Sewa");
        model.addColumn("Tanggal Kembali");
        model.addColumn("Total Harga");
        tabletransaksi.setModel(model);
        try {
            Connection connection = Koneksi.getConnection();
            res = stm.executeQuery("SELECT idTransaksi, NIK,noPlatMobil, durasiSewa,"
                    + " tanggalSewa,tanggalKembali,totalHarga FROM tbtransaksi");
            while (res.next()) {
                model.addRow(new Object[]{
                    res.getInt("idTransaksi"),
                    res.getString("NIK"),
                    res.getInt("noPlatMobil"),
                    res.getInt("durasiSewa"),
                    res.getDate("tanggalSewa"),
                    res.getDate("tanggalKembali"),
                    res.getInt("totalHarga"),});

            }
        } catch (Exception e) {

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        idtransaksi = new javax.swing.JLabel();
        txttotalharga = new javax.swing.JTextField();
        nama = new javax.swing.JLabel();
        txtdurasisewa = new javax.swing.JTextField();
        password = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabletransaksi = new javax.swing.JTable();
        nama1 = new javax.swing.JLabel();
        tanggalsewa = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        nama2 = new javax.swing.JLabel();
        btkelolauser = new javax.swing.JButton();
        btkelolamobil = new javax.swing.JButton();
        btkelolatransaksi = new javax.swing.JButton();
        bttambah = new javax.swing.JButton();
        btedit = new javax.swing.JButton();
        bthapus = new javax.swing.JButton();
        btkeluar = new javax.swing.JButton();
        txtnik1 = new javax.swing.JTextField();
        nama3 = new javax.swing.JLabel();
        txtnoplat1 = new javax.swing.JTextField();
        txtidtransaksi = new javax.swing.JTextField();
        idtransaksi1 = new javax.swing.JLabel();
        btCetak = new javax.swing.JButton();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        idtransaksi.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        idtransaksi.setText("NIK");
        getContentPane().add(idtransaksi);
        idtransaksi.setBounds(380, 150, 180, 25);

        txttotalharga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttotalhargaActionPerformed(evt);
            }
        });
        getContentPane().add(txttotalharga);
        txttotalharga.setBounds(770, 190, 320, 40);

        nama.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        nama.setText("Hari");
        getContentPane().add(nama);
        nama.setBounds(520, 390, 120, 25);

        txtdurasisewa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtdurasisewaActionPerformed(evt);
            }
        });
        getContentPane().add(txtdurasisewa);
        txtdurasisewa.setBounds(380, 380, 110, 40);

        password.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        password.setText("Total Harga");
        getContentPane().add(password);
        password.setBounds(770, 150, 110, 25);

        tabletransaksi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID Transaksi", "NIK", "No Plat Mobil", "Durasi Sewa", "Tanggal Sewa", "Tanggal Kembali", "Total Harga"
            }
        ));
        jScrollPane1.setViewportView(tabletransaksi);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(250, 520, 930, 180);

        nama1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        nama1.setText("No Plat Mobil");
        getContentPane().add(nama1);
        nama1.setBounds(770, 250, 160, 25);

        tanggalsewa.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        tanggalsewa.setText("Tanggal Sewa");
        getContentPane().add(tanggalsewa);
        tanggalsewa.setBounds(380, 250, 160, 25);
        getContentPane().add(jDateChooser1);
        jDateChooser1.setBounds(380, 290, 320, 40);
        getContentPane().add(jDateChooser2);
        jDateChooser2.setBounds(770, 90, 320, 40);

        nama2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        nama2.setText("Durasi Sewa");
        getContentPane().add(nama2);
        nama2.setBounds(380, 340, 120, 25);

        btkelolauser.setBackground(new java.awt.Color(255, 153, 153));
        btkelolauser.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btkelolauser.setForeground(new java.awt.Color(255, 255, 255));
        btkelolauser.setText("Kelola Data User");
        btkelolauser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btkelolauserActionPerformed(evt);
            }
        });
        getContentPane().add(btkelolauser);
        btkelolauser.setBounds(20, 140, 210, 50);

        btkelolamobil.setBackground(new java.awt.Color(255, 153, 153));
        btkelolamobil.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btkelolamobil.setForeground(new java.awt.Color(255, 255, 255));
        btkelolamobil.setText("Kelola Data Mobil");
        btkelolamobil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btkelolamobilActionPerformed(evt);
            }
        });
        getContentPane().add(btkelolamobil);
        btkelolamobil.setBounds(20, 320, 210, 50);

        btkelolatransaksi.setBackground(new java.awt.Color(255, 102, 153));
        btkelolatransaksi.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btkelolatransaksi.setForeground(new java.awt.Color(255, 255, 255));
        btkelolatransaksi.setText("Kelola Data Transaksi");
        btkelolatransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btkelolatransaksiActionPerformed(evt);
            }
        });
        getContentPane().add(btkelolatransaksi);
        btkelolatransaksi.setBounds(20, 490, 210, 50);

        bttambah.setBackground(new java.awt.Color(255, 153, 153));
        bttambah.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        bttambah.setForeground(new java.awt.Color(255, 255, 255));
        bttambah.setText("Tambah");
        bttambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttambahActionPerformed(evt);
            }
        });
        getContentPane().add(bttambah);
        bttambah.setBounds(360, 450, 170, 50);

        btedit.setBackground(new java.awt.Color(255, 153, 153));
        btedit.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btedit.setForeground(new java.awt.Color(255, 255, 255));
        btedit.setText("Edit");
        btedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bteditActionPerformed(evt);
            }
        });
        getContentPane().add(btedit);
        btedit.setBounds(650, 450, 170, 50);

        bthapus.setBackground(new java.awt.Color(255, 153, 153));
        bthapus.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        bthapus.setForeground(new java.awt.Color(255, 255, 255));
        bthapus.setText("Hapus");
        bthapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bthapusActionPerformed(evt);
            }
        });
        getContentPane().add(bthapus);
        bthapus.setBounds(920, 450, 170, 50);

        btkeluar.setBackground(new java.awt.Color(255, 0, 0));
        btkeluar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btkeluar.setForeground(new java.awt.Color(255, 255, 255));
        btkeluar.setText("Keluar");
        btkeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btkeluarActionPerformed(evt);
            }
        });
        getContentPane().add(btkeluar);
        btkeluar.setBounds(1100, 10, 70, 30);

        txtnik1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnik1ActionPerformed(evt);
            }
        });
        getContentPane().add(txtnik1);
        txtnik1.setBounds(380, 190, 320, 40);

        nama3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        nama3.setText("Tanggal Kembali");
        getContentPane().add(nama3);
        nama3.setBounds(770, 50, 160, 25);

        txtnoplat1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnoplat1ActionPerformed(evt);
            }
        });
        getContentPane().add(txtnoplat1);
        txtnoplat1.setBounds(770, 300, 320, 40);

        txtidtransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtidtransaksiActionPerformed(evt);
            }
        });
        getContentPane().add(txtidtransaksi);
        txtidtransaksi.setBounds(380, 80, 320, 40);

        idtransaksi1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        idtransaksi1.setText("ID Transaksi");
        getContentPane().add(idtransaksi1);
        idtransaksi1.setBounds(380, 40, 180, 25);

        btCetak.setText("Cetak");
        btCetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCetakActionPerformed(evt);
            }
        });
        getContentPane().add(btCetak);
        btCetak.setBounds(20, 20, 72, 23);

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Entity/bg2_1.png"))); // NOI18N
        getContentPane().add(background);
        background.setBounds(0, 0, 1280, 700);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txttotalhargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttotalhargaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttotalhargaActionPerformed

    private void txtdurasisewaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtdurasisewaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtdurasisewaActionPerformed

    private void btkelolauserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btkelolauserActionPerformed
        UserManagement user = new UserManagement();
        user.setSize(1181, 700);
        user.setResizable(false);
        user.setVisible(true);
        user.setExtendedState(JFrame.NORMAL);
        this.dispose();
    }//GEN-LAST:event_btkelolauserActionPerformed

    private void btkelolamobilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btkelolamobilActionPerformed
        CarManagement car = new CarManagement();
        car.setSize(1181, 700);
        car.setResizable(false);
        car.setVisible(true);
        car.setExtendedState(JFrame.NORMAL);
        this.dispose();

    }//GEN-LAST:event_btkelolamobilActionPerformed

    private void btkelolatransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btkelolatransaksiActionPerformed

    }//GEN-LAST:event_btkelolatransaksiActionPerformed
    // TODO add your handling code here:
    private void bttambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttambahActionPerformed
        PreparedStatement preparedStatement = null;
        try {
            Connection connection = Koneksi.getConnection();
            System.out.println("Database connected successfully!");

            String query = "INSERT INTO tbtransaksi (NIK,noPlatMobil,durasiSewa,"
                    + "tanggalSewa,tanggalKembali,totalHarga) VALUES ( ?, ?, ?,?,?,?)";
            preparedStatement = connection.prepareStatement(query);

            preparedStatement.setString(1, txtnik1.getText());
            preparedStatement.setString(2, txtnoplat1.getText()); // Assuming noPlatMobil is a String
            preparedStatement.setInt(3, Integer.parseInt(txtdurasisewa.getText()));

            // Convert java.util.Date to java.sql.Date
            java.util.Date sewaDate = jDateChooser1.getDate();
            java.util.Date kembaliDate = jDateChooser2.getDate();

            if (sewaDate != null && kembaliDate != null) {
                preparedStatement.setDate(4, new java.sql.Date(sewaDate.getTime()));
                preparedStatement.setDate(5, new java.sql.Date(kembaliDate.getTime()));
            } else {
                System.out.println("Please select valid dates.");
                return;
            }

            preparedStatement.setDouble(6, Double.parseDouble(txttotalharga.getText()));

            int rowsInserted = preparedStatement.executeUpdate();
            System.out.println("Rows inserted: " + rowsInserted);

            if (rowsInserted > 0) {
                System.out.println("Data berhasil ditambahkan ke tabel transaksi.");
                TransactionManagement transaksi = new TransactionManagement();
                transaksi.setVisible(true);
                this.setVisible(false);
            }
        } catch (SQLException ex) {
            System.out.println("Error: " + ex.getMessage());
            ex.printStackTrace();
        } finally {
            if (preparedStatement != null) {
                try {
                    preparedStatement.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_bttambahActionPerformed

    private void bteditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bteditActionPerformed
        int id = Integer.parseInt(txtidtransaksi.getText());
        String nik = txtnik1.getText();
        String noPlatMobil = txtnoplat1.getText();
        double harga = Double.parseDouble(txttotalharga.getText());
        int ds = Integer.parseInt(txtdurasisewa.getText());
        java.util.Date sewaDate = jDateChooser1.getDate();
        java.util.Date kembaliDate = jDateChooser2.getDate();

        PreparedStatement preparedStatement = null;
        try {
            String query = "UPDATE tbtransaksi "
                    + "SET NIK=?, noPlatMobil=?, durasiSewa=?,"
                    + " tanggalSewa=?, tanggalKembali=?, "
                    + "totalHarga=? WHERE idTransaksi=?";
            preparedStatement = Koneksi.getConnection().prepareStatement(query);

            // Set parameter values
            preparedStatement.setString(1, nik);
            preparedStatement.setString(2, noPlatMobil);
            preparedStatement.setInt(3, ds);

            // Convert java.util.Date to java.sql.Date
            preparedStatement.setDate(4, new java.sql.Date(sewaDate.getTime()));
            preparedStatement.setDate(5, new java.sql.Date(kembaliDate.getTime()));

            preparedStatement.setDouble(6, harga);
            preparedStatement.setInt(7, id);

            // Execute the SQL statement
            preparedStatement.executeUpdate();
            tampiltabel();
        } catch (SQLException ex) {
            System.out.println("Error: " + ex.getMessage());
            ex.printStackTrace();
        } finally {
            if (preparedStatement != null) {
                try {
                    preparedStatement.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_bteditActionPerformed

    private void bthapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bthapusActionPerformed
        PreparedStatement preparedStatement = null;
        String id = txtidtransaksi.getText();
        try {
            Connection connection = Koneksi.getConnection();
            System.out.println("Database connected successfully!");

            String query = "DELETE FROM tbtransaksi WHERE idTransaksi ='" + id + "'";
            preparedStatement = connection.prepareStatement(query);
            preparedStatement.executeUpdate();
            tampiltabel();
            System.out.println("Data dihapus");

        } catch (SQLException ex) {
            System.out.println("Error: " + ex.getMessage());
            ex.printStackTrace();
        } finally {
            if (preparedStatement != null) {
                try {
                    preparedStatement.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_bthapusActionPerformed

    private void txtnik1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnik1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnik1ActionPerformed

    private void txtnoplat1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnoplat1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnoplat1ActionPerformed

    private void txtidtransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtidtransaksiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtidtransaksiActionPerformed

    private void btkeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btkeluarActionPerformed
         LandingPage lp = new LandingPage();
        lp.setSize(1181, 700);
        lp.setResizable(false);
        lp.setVisible(true);
        lp.setExtendedState(JFrame.NORMAL);
        this.dispose();   
    }//GEN-LAST:event_btkeluarActionPerformed

    private void btCetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCetakActionPerformed
        Map map = new HashMap();

        try {
            Connection conn = Koneksi.getConnection();
            JasperDesign jasperDesign = JRXmlLoader.load("src/report/report1.jrxml");
            JasperReport jasperReport = JasperCompileManager.compileReport(jasperDesign);
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, map, conn);
            JasperViewer jasperViewer = new JasperViewer(jasperPrint, false);
            jasperViewer.setTitle("Report Data Rental Mobil");
            jasperViewer.setVisible(true);
        } catch (JRException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error while generating report: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btCetakActionPerformed
    private void propertyChange(PropertyChangeEvent evt) {
        updateDateDifference();
    }

    private class DateChangeListener implements PropertyChangeListener {

        @Override
        public void propertyChange(PropertyChangeEvent evt) {
            updateDateDifference();
        }
    }

    private void updateDateDifference() {
        java.util.Date sewaDate = jDateChooser1.getDate();
        java.util.Date kembaliDate = jDateChooser2.getDate();

        if (sewaDate != null && kembaliDate != null) {
            long diffInMillis = kembaliDate.getTime() + 1 - sewaDate.getTime();
            long diffInDays = TimeUnit.DAYS.convert(diffInMillis, TimeUnit.MILLISECONDS);
            txtdurasisewa.setText(String.valueOf(diffInDays));
        } else {
            txtdurasisewa.setText("");
        }
    }

    private void updateH() {
        String noPlatMobil = txtnoplat1.getText();
        Connection conn = null;
        if (noPlatMobil.isEmpty()) {
            return;
        }

        try {

            // Connect to the database
            String url = "jdbc:mysql://localhost:3306/dbrental";
            String user = "root";
            String pass = "";
            conn = DriverManager.getConnection(url, user, pass);
            String query = "SELECT hargaMobil FROM tbmobil WHERE noPlatMobil = ?";
            PreparedStatement stmt = conn.prepareStatement(query);
            stmt.setString(1, noPlatMobil);
            ResultSet rs = stmt.executeQuery();

            if (rs.next()) {
                double hargaMobil = rs.getDouble("hargaMobil");
                String diffText = txtdurasisewa.getText();
                if (!diffText.isEmpty()) {
                    long diffInDays = Long.parseLong(diffText);
                    double totalHarga = hargaMobil * diffInDays;
                    txttotalharga.setText(String.valueOf(totalHarga));
                } else {
                    txttotalharga.setText("");
                }
            } else {
                txttotalharga.setText("No Plat Not Found");
            }

            rs.close();
            stmt.close();
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
            txttotalharga.setText("Error");
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TransactionManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TransactionManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TransactionManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TransactionManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TransactionManagement().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private javax.swing.JButton btCetak;
    private javax.swing.JButton btedit;
    private javax.swing.JButton bthapus;
    private javax.swing.JButton btkelolamobil;
    private javax.swing.JButton btkelolatransaksi;
    private javax.swing.JButton btkelolauser;
    private javax.swing.JButton btkeluar;
    private javax.swing.JButton bttambah;
    private javax.swing.JLabel idtransaksi;
    private javax.swing.JLabel idtransaksi1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nama;
    private javax.swing.JLabel nama1;
    private javax.swing.JLabel nama2;
    private javax.swing.JLabel nama3;
    private javax.swing.JLabel password;
    private javax.swing.JTable tabletransaksi;
    private javax.swing.JLabel tanggalsewa;
    private javax.swing.JTextField txtdurasisewa;
    private javax.swing.JTextField txtidtransaksi;
    private javax.swing.JTextField txtnik1;
    private javax.swing.JTextField txtnoplat1;
    private javax.swing.JTextField txttotalharga;
    // End of variables declaration//GEN-END:variables
}
